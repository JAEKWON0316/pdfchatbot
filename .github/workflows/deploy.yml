name: Deploy to EC2

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - '.github/workflows/deploy.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      working-directory: ./backend
      run: npm ci

    - name: Build
      working-directory: ./backend
      run: npm run build

    - name: Create deployment package
      working-directory: ./backend
      run: |
        tar -czf ../backend-deploy.tar.gz \
          dist package.json package-lock.json ecosystem.config.cjs

    - name: Deploy to EC2
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
      run: |
        echo "$EC2_KEY" > ec2_key.pem
        chmod 400 ec2_key.pem
        
        scp -i ec2_key.pem -o StrictHostKeyChecking=no \
          backend-deploy.tar.gz $EC2_USER@$EC2_HOST:~/
        
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no \
          $EC2_USER@$EC2_HOST << 'EOF'
          cd ~/backend
          tar -xzf ~/backend-deploy.tar.gz
          npm ci --only=production
          pm2 restart pdfchatbot-backend || pm2 start dist/server.js --name pdfchatbot-backend
          pm2 save
          rm ~/backend-deploy.tar.gz
        EOF
        
        rm ec2_key.pem

    - name: Notify deployment
      if: success()
      run: echo "✅ Deployment successful!"

    - name: Notify failure
      if: failure()
      run: echo "❌ Deployment failed!"